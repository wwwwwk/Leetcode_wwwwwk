/**
给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:
输入: 123
输出: 321

示例 2:

输入: -123
输出: -321

示例 3:

输入: 120
输出: 21
注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。
*/

/**
 * @param {number} x
 * @return {number}
 */
 //math
var reverse = function(x) {
    var result = 0;
    var temp = Math.abs(x);
    while(temp != 0){
        result = (result * 10) + (temp % 10);
        temp = parseInt(temp / 10);
    }
    
    result = x > 0 ? result : result * (-1);
    return result < -1 * Math.pow(2,31) || result > Math.pow(2,31)-1 ? 0 : result;
};

//数组法
var reverse = function(x) {
    var result;
    var arr = (x + '').split('');
    if(arr[0] == '-')
        var first = arr.shift();
    arr.reverse();
    result = arr.join('');
    result = first == undefined ? parseInt(result) : parseInt((-1) * result);
    return result < -1 * Math.pow(2, 31) || result > Math.pow(2, 31) - 1 ? 0 : result;
};

